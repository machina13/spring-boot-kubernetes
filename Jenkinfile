pipeline {
    agent any 
    stages {
        stage('SAST') {
            steps {
			withSonarQubeEnv('sonar') {
		                sh 'chmod +x mvnw'
				sh './mvnw org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.login=eb402dfd87ab83bfa88e9047d9c7add47053da27 -Dsonar.branch.name=master -Dsonar.host.url=https://sonarcloud.io -Dsonar.projectKey=machina13_spring-boot-kubernetes -Dsonar.organization=machina13'
				}
        	    	}	
	        }	
	stage('Check Quality Gate') {
            steps {
		    timeout(time: 60, unit: 'MINUTES') {
			script  {
				//waitForQualityGate abortPipeline: true
				def qg = waitForQualityGate()
        		      	if (qg.status != 'OK') {
	                		      error "Pipeline aborted due to quality gate failure: ${waitForQualityGate.status}"
					}
				//else 
					//echo "${waitForQualityGate.status}"
				}
			}
		}
	}
    }
}

